name: Flutter Analyze with GitHub Annotations

on:
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  flutter-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true

      - name: Cache flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml', 'pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter Analyze
        id: analyze
        run: |
          # Flutter analyzeを実行し、結果をファイルに保存
          flutter analyze --no-pub > analyze_output.txt 2>&1 || true
          
          # 結果の処理とGitHub Annotationの生成
          analyze_failed="false"
          
          # Flutter analyzeの出力を1行ずつ処理
          while IFS= read -r line || [ -n "$line" ]; do
            # Flutter analyzeの出力形式に一致するかチェック
            # 例: "warning • The value of the field '_counter' isn't used • lib/main.dart:36:7 • unused_field"
            if echo "$line" | grep -qE "^\s*(error|warning|info)\s*•.*•.*•"; then
              # レベルを抽出 (error, warning, info)
              
              # メッセージ部分を抽出 (1番目の•の後から2番目の•まで)
              message=$(echo "$line" | sed -E 's/^[^•]*•\s*([^•]+)\s*•.*/\1/' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
              
              # ファイル情報を抽出 (2番目の•の後から3番目の•まで)
              file_location=$(echo "$line" | sed -E 's/^[^•]*•[^•]*•\s*([^•]+)\s*•.*/\1/' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
              
              # ルール名を抽出 (3番目の•の後)
              rule_name=$(echo "$line" | sed -E 's/^[^•]*•[^•]*•[^•]*•\s*(.+)$/\1/' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
              
              # ファイルパスと行番号を分離
              if echo "$file_location" | grep -qE ":[0-9]+:[0-9]+"; then
                file_path=$(echo "$file_location" | sed -E 's/^([^:]+):[0-9]+:[0-9]+.*$/\1/')
                line_number=$(echo "$file_location" | sed -E 's/^[^:]+:([0-9]+):[0-9]+.*$/\1/')
                
                # 完全なメッセージを作成 (メッセージ + ルール名)
                full_message="${message} (${rule_name})"
                
                # GitHub Annotationを出力
                case "$level" in
                  "error")
                    echo "::error file=${file_path},line=${line_number}::${full_message}"
                    analyze_failed="true"
                    ;;
                  "warning")
                    echo "::warning file=${file_path},line=${line_number}::${full_message}"
                    ;;
                  "info")
                    echo "::notice file=${file_path},line=${line_number}::${full_message}"
                    ;;
                esac
              fi
            fi
          done < analyze_output.txt
          
          # 結果をGitHub Actionsの出力変数に設定
          echo "analyze_failed=${analyze_failed}" >> $GITHUB_OUTPUT

      - name: Display analyze results
        run: |
          echo "Flutter analyze results:"
          cat analyze_output.txt || echo "No analyze output found"

      - name: Fail if analysis has errors
        if: steps.analyze.outputs.analyze_failed == 'true'
        run: |
          echo "Flutter analyze found issues. Check the annotations above for details."
          exit 1
